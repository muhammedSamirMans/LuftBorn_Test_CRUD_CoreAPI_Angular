{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { DatePipe } from '@angular/common';\nimport { Component } from '@angular/core';\nlet AddNoteComponent = class AddNoteComponent {\n  constructor(router, NotepadService, DatePipe) {\n    this.router = router;\n    this.NotepadService = NotepadService;\n    this.DatePipe = DatePipe;\n    this.notelist = [];\n    this.day = new Date();\n    this.search = '';\n    this.notelist = this.NotepadService.getnotes();\n  }\n  editNote(note, i) {\n    this.NotepadService.ACTION$.next('edit');\n    this.NotepadService.DATA$.next(note);\n    this.NotepadService.EDIT$.next(i);\n    this.router.navigate(['/add-edit-note']);\n  }\n  deleteNote(i) {\n    this.notelist = this.NotepadService.deleteNote(i);\n  }\n  shownote(note) {\n    this.NotepadService.ACTION$.next('show');\n    this.NotepadService.DATA$.next(note);\n    this.router.navigate(['/add-edit-note']);\n  }\n  addNote() {\n    this.NotepadService.ACTION$.next('add');\n    this.NotepadService.DATA$.next({\n      title: '',\n      date: this.DatePipe.transform(new Date(), 'MMM d, y'),\n      des: ''\n    });\n    this.router.navigate(['/add-edit-note']);\n  }\n  searchfun() {\n    if (this.search.length > 0) {\n      this.notelist = this.notelist.filter(note => {\n        return note.title.toUpperCase().includes(this.search.toUpperCase());\n      });\n    } else {\n      this.notelist = this.NotepadService.getnotes();\n    }\n  }\n};\nAddNoteComponent = __decorate([Component({\n  selector: 'app-add-note',\n  templateUrl: './add-note.component.html',\n  styleUrls: ['./add-note.component.scss'],\n  providers: [DatePipe]\n})], AddNoteComponent);\nexport { AddNoteComponent };","map":{"version":3,"mappings":";AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAC1C,SAASC,SAAS,QAAQ,eAAe;AAUlC,IAAMC,gBAAgB,GAAtB,MAAMA,gBAAgB;EAI3BC,YAAmBC,MAAa,EAAQC,cAA6B,EAAQL,QAAiB;IAA3E,WAAM,GAANI,MAAM;IAAe,mBAAc,GAAdC,cAAc;IAAuB,aAAQ,GAARL,QAAQ;IAHrF,aAAQ,GAAsC,EAAE;IAChD,QAAG,GAAE,IAAIM,IAAI,EAAE;IACf,WAAM,GAAQ,EAAE;IAEhB,IAAI,CAACC,QAAQ,GAAC,IAAI,CAACF,cAAc,CAACG,QAAQ,EAAE;EAC9C;EACAC,QAAQ,CAACC,IAAQ,EAACC,CAAQ;IACxB,IAAI,CAACN,cAAc,CAACO,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;IACxC,IAAI,CAACR,cAAc,CAACS,KAAK,CAACD,IAAI,CAACH,IAAI,CAAC;IACpC,IAAI,CAACL,cAAc,CAACU,KAAK,CAACF,IAAI,CAACF,CAAC,CAAC;IACjC,IAAI,CAACP,MAAM,CAACY,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EACxC;EACAC,UAAU,CAACN,CAAQ;IACjB,IAAI,CAACJ,QAAQ,GAAC,IAAI,CAACF,cAAc,CAACY,UAAU,CAACN,CAAC,CAAC;EACjD;EACAO,QAAQ,CAACR,IAAQ;IACjB,IAAI,CAACL,cAAc,CAACO,OAAO,CAACC,IAAI,CAAC,MAAM,CAAC;IACxC,IAAI,CAACR,cAAc,CAACS,KAAK,CAACD,IAAI,CAACH,IAAI,CAAC;IACpC,IAAI,CAACN,MAAM,CAACY,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EACxC;EACAG,OAAO;IACL,IAAI,CAACd,cAAc,CAACO,OAAO,CAACC,IAAI,CAAC,KAAK,CAAC;IACvC,IAAI,CAACR,cAAc,CAACS,KAAK,CAACD,IAAI,CAAC;MAACO,KAAK,EAAC,EAAE;MAACC,IAAI,EAAC,IAAI,CAACrB,QAAQ,CAACsB,SAAS,CAAC,IAAIhB,IAAI,EAAE,EAAC,UAAU,CAAC;MAACiB,GAAG,EAAC;IAAE,CAAC,CAAC;IACrG,IAAI,CAACnB,MAAM,CAACY,QAAQ,CAAC,CAAC,gBAAgB,CAAC,CAAC;EACxC;EAEAQ,SAAS;IACP,IAAG,IAAI,CAACC,MAAM,CAACC,MAAM,GAAC,CAAC,EAAC;MACtB,IAAI,CAACnB,QAAQ,GAAC,IAAI,CAACA,QAAQ,CAACoB,MAAM,CAACjB,IAAI,IAAE;QACvC,OAAOA,IAAI,CAACU,KAAK,CAACQ,WAAW,EAAE,CAACC,QAAQ,CAAC,IAAI,CAACJ,MAAM,CAACG,WAAW,EAAE,CAAC;MACrE,CAAC,CAAC;KACH,MACG;MACF,IAAI,CAACrB,QAAQ,GAAC,IAAI,CAACF,cAAc,CAACG,QAAQ,EAAE;;EAEhD;CACH;AArCYN,gBAAgB,eAN5BD,SAAS,CAAC;EACT6B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,2BAA2B,CAAC;EACxCC,SAAS,EAAC,CAACjC,QAAQ;CACpB,CAAC,GACWE,gBAAgB,CAqC5B;SArCYA,gBAAgB","names":["DatePipe","Component","AddNoteComponent","constructor","router","NotepadService","Date","notelist","getnotes","editNote","note","i","ACTION$","next","DATA$","EDIT$","navigate","deleteNote","shownote","addNote","title","date","transform","des","searchfun","search","length","filter","toUpperCase","includes","selector","templateUrl","styleUrls","providers"],"sourceRoot":"","sources":["G:\\Interviews\\LuftBORN\\LUFTBORN_Test_Frontend\\src\\app\\notelist\\notes\\notes.component.ts"],"sourcesContent":["import { DatePipe } from '@angular/common';\r\nimport { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NotepadService } from '../notepad.service';\r\n\r\n@Component({\r\n  selector: 'app-add-note',\r\n  templateUrl: './add-note.component.html',\r\n  styleUrls: ['./add-note.component.scss'],\r\n  providers:[DatePipe]\r\n})\r\nexport class AddNoteComponent {\r\n  notelist:{title:string,date:any,des:string}[]=[]\r\n  day= new Date()\r\n  search:string='';\r\n  constructor(public router:Router,public NotepadService:NotepadService,public DatePipe:DatePipe){\r\n  this.notelist=this.NotepadService.getnotes()\r\n}\r\neditNote(note:any,i:number){  \r\n  this.NotepadService.ACTION$.next('edit')\r\n  this.NotepadService.DATA$.next(note)\r\n  this.NotepadService.EDIT$.next(i)\r\n  this.router.navigate(['/add-edit-note'])\r\n  }\r\n  deleteNote(i:number){\r\n    this.notelist=this.NotepadService.deleteNote(i)\r\n  }\r\n  shownote(note:any){\r\n  this.NotepadService.ACTION$.next('show')\r\n  this.NotepadService.DATA$.next(note)\r\n  this.router.navigate(['/add-edit-note'])\r\n  }\r\n  addNote(){\r\n    this.NotepadService.ACTION$.next('add')\r\n    this.NotepadService.DATA$.next({title:'',date:this.DatePipe.transform(new Date(),'MMM d, y'),des:''})\r\n    this.router.navigate(['/add-edit-note'])\r\n    }\r\n\r\n    searchfun(){\r\n      if(this.search.length>0){\r\n        this.notelist=this.notelist.filter(note=>{\r\n          return note.title.toUpperCase().includes(this.search.toUpperCase())\r\n        })\r\n      }\r\n      else{\r\n        this.notelist=this.NotepadService.getnotes()\r\n      }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}